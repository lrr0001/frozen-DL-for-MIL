load('param_file.mat', ...
    'K', ...
    'number_of_negative_dictionary_atoms', ...
    'number_of_classes', ...
    'L_i', ...
    'gen_sparsity_level', ...
    'number_of_bags_train', ...
    'number_of_bags_val', ...
    'number_of_bags_test');
load('structure_file.mat');    


% coefficient generation code
gen_coef_param.K = K;
gen_coef_param.K0 = number_of_negative_dictionary_atoms;
gen_coef_param.C = number_of_classes;
gen_coef_param.Li = L_i;
gen_coef_param.L = gen_sparsity_level;
gen_coef_param.nob = number_of_bags_train;
gen_coef_param.ipb = instances_per_bag;
gen_coef_train = generate_synthetic_coef(instance_labels_train,gen_coef_param);
gen_coef_param.nob = number_of_bags_val;
gen_coef_val = generate_synthetic_coef(instance_labels_val,gen_coef_param);
gen_coef_param.nob = number_of_bags_test;
gen_coef_test = generate_synthetic_coef(instance_labels_test,gen_coef_param);
coef_id = dec2hex(randi(2^28) - 1);
nodeName = 'generating_coefficients_identifier';
parents = build_relative_node('instance_labels_identifier',instance_labels_id);
instantiationField = instanceNameFun.ms.(nodeName)(coef_id);
experimentLayout.add_instantiation(nodeName,instantiationField,nodeInstance(parents));

nodeName = 'coef';

coreParents = [build_relative_node('generating_coefficients_identifier',coef_id), ...
    build_relative_node('number_of_classes',number_of_classes), ...
    build_relative_node('K',K), ...
    build_relative_node('Li',L_i), ...
    build_relative_node('gen_sparsity_level',gen_sparsity_level), ...
    build_relative_node('instances_per_bag',instances_per_bag)];
parents = [coreParents, ...
    build_relative_node('instance_labels',instance_labels_id,'train'), ...
    build_relative_node('number_of_bags',number_of_bags_train,'train')];
instantiationField = instanceNameFun.ms.(nodeName)(coef_id,'train');
experimentLayout.add_instantiation(nodeName,instantiationField,nodeInstance(parents));

parents = [coreParents, ...
    build_relative_node('instance_labels',instance_labels_id,'val'), ...
    build_relative_node('number_of_bags',number_of_bags_val,'val')];

instantiationField = instanceNameFun.ms.(nodeName)(coef_id,'val');
experimentLayout.add_instantiation(nodeName,instantiationField,nodeInstance(parents));

parents = [coreParents, ...
    build_relative_node('instance_labels',instance_labels_id,'test'), ...
    build_relative_node('number_of_bags',number_of_bags_test,'test')];
instantiationField = instanceNameFun.ms.(nodeName)(coef_id,'test');
experimentLayout.add_instantiation(nodeName,instantiationField,nodeInstance(parents));

save('structure_file.mat','experimentLayout','-append');
