load('param_file.mat', ...
    'SDL_negative_dictsize', ...
    'SDL_total_dictsize', ...
    'SDL_negative_sparsity_level', ...
    'SDL_positive_sparsity_level', ...
    'SDL_negative_iternum', ...
    'SDL_positive_iternum', ...
    'number_of_classes', ...
    'lc_sparsity_level');
load('structure_file.mat');




learned_dictionary_id = dec2hex(randi(2^28) - 1);
nodeName = 'learned_dictionary_identifier';
parents = [build_relative_node('data_identifier',data_id), ...
    build_relative_node('bag_labels_identifier',bag_labels_id)];
instantiationField = instanceNameFun.ms.(nodeName)(learned_dictionary_id);
experimentLayout.add_instantiation(nodeName,instantiationField,nodeInstance(parents));
learned_coef_id = dec2hex(randi(2^28) - 1);
nodeName = 'learned_coefficients_identifier';
parents = [build_relative_node('learned_dictionary_identifier',learned_dictionary_id), ...
    build_relative_node('data_identifier',data_id)];
instantiationField = instanceNameFun.ms.(nodeName)(learned_coef_id);
experimentLayout.add_instantiation(nodeName,instantiationField,nodeInstance(parents));

coreParents = [relativeNode('dictionary_learning_method','frozen_KSVD'), ...
    build_relative_node('learned_dictionary_identifier',learned_dictionary_id), ...
    build_relative_node('SDL_negative_dictionary_size',SDL_negative_dictsize), ...
    build_relative_node('SDL_total_dictionary_size',SDL_total_dictsize), ...
    build_relative_node('SDL_negative_sparsity_level',SDL_negative_sparsity_level), ...
    build_relative_node('SDL_positive_sparsity_level',SDL_positive_sparsity_level), ...
    build_relative_node('SDL_negative_number_of_iterations',SDL_negative_iternum), ...
    build_relative_node('SDL_positive_number_of_iterations',SDL_positive_iternum), ...
    build_relative_node('data',data_id,'train'), ...
    build_relative_node('bag_labels',bag_labels_id,'train'), ...
    build_relative_node('number_of_classes',number_of_classes)];
coreParents2 = [relativeNode('dictionary_learning_method','frozen_KSVD'), ...
    build_relative_node('learned_coefficients_identifier',learned_coef_id), ...
    build_relative_node('learned_coef_sparsity_level',lc_sparsity_level)];
frzn_ksvd_param.negative_dictsize = SDL_negative_dictsize;
frzn_ksvd_param.negative_Tdata = SDL_negative_sparsity_level;
frzn_ksvd_param.negative_iternum = SDL_negative_iternum;
frzn_ksvd_param.total_dictsize = SDL_total_dictsize;
frzn_ksvd_param.total_tdata = SDL_positive_sparsity_level;
frzn_ksvd_param.positive_iternum = SDL_positive_iternum;
for cc = 1:number_of_classes
    instantiationField = instanceNameFun.ms.('class')(cc);
    experimentLayout.add_instantiation('class',instantiationField,nodeInstance([]));
%    frzn_ksvd_dct = MIL_supervised_ksvd(x_train,bag_labels_train(cc,:),frzn_ksvd_param);
    instantiationField = instanceNameFun.ms.('learned_dictionary')(learned_dictionary_id,cc);
    parents = [coreParents,build_relative_node('class',cc)];
    experimentLayout.add_instantiation('learned_dictionary',instantiationField,nodeInstance(parents));
%    frzn_ksvd_Gmat = frzn_ksvd_dct'*frzn_ksvd_dct;
%    frzn_ksvd_coef_train = omp(frzn_ksvd_dct'*x_instances_train,frzn_ksvd_Gmat,lc_sparsity_level);
%    frzn_ksvd_coef_bags_train = bag_the_array(frzn_ksvd_coef_train,instances_per_bag);
    parents = [coreParents2, ...
        build_relative_node('learned_dictionary',learned_dictionary_id,cc), ...
        build_relative_node('data',data_id,'train')];
    instantiationField = instanceNameFun.ms.('learned_coef')(learned_coef_id,cc,'train');
    experimentLayout.add_instantiation('learned_coef',instantiationField,nodeInstance(parents));
%    frzn_ksvd_coef_val = omp(frzn_ksvd_dct'*x_instances_val,frzn_ksvd_Gmat,lc_sparsity_level);
%    frzn_ksvd_coef_bags_val = bag_the_array(frzn_ksvd_coef_val,instances_per_bag);
    parents = [coreParents2, ...
        build_relative_node('learned_dictionary',learned_dictionary_id,cc), ...
        build_relative_node('data',data_id,'val')];
    instantiationField = instanceNameFun.ms.('learned_coef')(learned_coef_id,cc,'val');
    experimentLayout.add_instantiation('learned_coef',instantiationField,nodeInstance(parents));
%    frzn_ksvd_coef_test = omp(frzn_ksvd_dct'*x_instances_test,frzn_ksvd_Gmat,lc_sparsity_level);
%    frzn_ksvd_coef_bags_test = bag_the_array(frzn_ksvd_coef_test,instances_per_bag);
    parents = [coreParents2, ...
        build_relative_node('learned_dictionary',learned_dictionary_id,cc), ...
        build_relative_node('data',data_id,'test')];
    instantiationField = instanceNameFun.ms.('learned_coef')(learned_coef_id,cc,'test');
    experimentLayout.add_instantiation('learned_coef',instantiationField,nodeInstance(parents));
    
end












save('structure_file.mat','experimentLayout','-append');